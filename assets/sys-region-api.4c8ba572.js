import{B as S,h as P,i as R,R as m}from"./index.32ca2701.js";const d=function(c){return{apiSysRegionAddPost:async(e,a={})=>{const r="/api/sysRegion/add",s=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const n={method:"POST",...t,...a},h={},l={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(s.search);for(const o in l)i.set(o,l[o]);for(const o in a.params)i.set(o,a.params[o]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};n.headers={...h,...p,...a.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:n}},apiSysRegionDeletePost:async(e,a={})=>{const r="/api/sysRegion/delete",s=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const n={method:"POST",...t,...a},h={},l={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(s.search);for(const o in l)i.set(o,l[o]);for(const o in a.params)i.set(o,a.params[o]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};n.headers={...h,...p,...a.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:n}},apiSysRegionListGet:async(e,a={})=>{if(e==null)throw new m("id","Required parameter id was null or undefined when calling apiSysRegionListGet.");const r="/api/sysRegion/list",s=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const n={method:"GET",...t,...a},h={},l={};e!==void 0&&(l.Id=e);const i=new URLSearchParams(s.search);for(const y in l)i.set(y,l[y]);for(const y in a.params)i.set(y,a.params[y]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};return n.headers={...h,...p,...a.headers},{url:s.pathname+s.search+s.hash,options:n}},apiSysRegionPagePost:async(e,a={})=>{const r="/api/sysRegion/page",s=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const n={method:"POST",...t,...a},h={},l={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(s.search);for(const o in l)i.set(o,l[o]);for(const o in a.params)i.set(o,a.params[o]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};n.headers={...h,...p,...a.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:n}},apiSysRegionSyncPost:async(e={})=>{const a="/api/sysRegion/sync",r=new URL(a,"https://example.com");let s;c&&(s=c.baseOptions);const t={method:"POST",...s,...e},n={},h={},l=new URLSearchParams(r.search);for(const p in h)l.set(p,h[p]);for(const p in e.params)l.set(p,e.params[p]);r.search=new URLSearchParams(l).toString();let i=s&&s.headers?s.headers:{};return t.headers={...n,...i,...e.headers},{url:r.pathname+r.search+r.hash,options:t}},apiSysRegionUpdatePost:async(e,a={})=>{const r="/api/sysRegion/update",s=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const n={method:"POST",...t,...a},h={},l={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(s.search);for(const o in l)i.set(o,l[o]);for(const o in a.params)i.set(o,a.params[o]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};n.headers={...h,...p,...a.headers};const y=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:n}}}},u=function(c){return{async apiSysRegionAddPost(e,a){const r=await d(c).apiSysRegionAddPost(e,a);return(s=P,t=R)=>{const n={...r.options,url:t+r.url};return s.request(n)}},async apiSysRegionDeletePost(e,a){const r=await d(c).apiSysRegionDeletePost(e,a);return(s=P,t=R)=>{const n={...r.options,url:t+r.url};return s.request(n)}},async apiSysRegionListGet(e,a){const r=await d(c).apiSysRegionListGet(e,a);return(s=P,t=R)=>{const n={...r.options,url:t+r.url};return s.request(n)}},async apiSysRegionPagePost(e,a){const r=await d(c).apiSysRegionPagePost(e,a);return(s=P,t=R)=>{const n={...r.options,url:t+r.url};return s.request(n)}},async apiSysRegionSyncPost(e){const a=await d(c).apiSysRegionSyncPost(e);return(r=P,s=R)=>{const t={...a.options,url:s+a.url};return r.request(t)}},async apiSysRegionUpdatePost(e,a){const r=await d(c).apiSysRegionUpdatePost(e,a);return(s=P,t=R)=>{const n={...r.options,url:t+r.url};return s.request(n)}}}};class O extends S{async apiSysRegionAddPost(e,a){return u(this.configuration).apiSysRegionAddPost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysRegionDeletePost(e,a){return u(this.configuration).apiSysRegionDeletePost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysRegionListGet(e,a){return u(this.configuration).apiSysRegionListGet(e,a).then(r=>r(this.axios,this.basePath))}async apiSysRegionPagePost(e,a){return u(this.configuration).apiSysRegionPagePost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysRegionSyncPost(e){return u(this.configuration).apiSysRegionSyncPost(e).then(a=>a(this.axios,this.basePath))}async apiSysRegionUpdatePost(e,a){return u(this.configuration).apiSysRegionUpdatePost(e,a).then(r=>r(this.axios,this.basePath))}}export{O as S};
