import{B as P,h as u,i as S,R as d}from"./index.122dcd40.js";const R=function(c){return{apiSysRoleAddPost:async(e,a={})=>{const r="/api/sysRole/add",s=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const o={method:"POST",...t,...a},i={},h={};i["Content-Type"]="application/json-patch+json";const l=new URLSearchParams(s.search);for(const n in h)l.set(n,h[n]);for(const n in a.params)l.set(n,a.params[n]);s.search=new URLSearchParams(l).toString();let p=t&&t.headers?t.headers:{};o.headers={...i,...p,...a.headers};const y=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:o}},apiSysRoleDeletePost:async(e,a={})=>{const r="/api/sysRole/delete",s=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const o={method:"POST",...t,...a},i={},h={};i["Content-Type"]="application/json-patch+json";const l=new URLSearchParams(s.search);for(const n in h)l.set(n,h[n]);for(const n in a.params)l.set(n,a.params[n]);s.search=new URLSearchParams(l).toString();let p=t&&t.headers?t.headers:{};o.headers={...i,...p,...a.headers};const y=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:o}},apiSysRoleGrantDataScopePost:async(e,a={})=>{const r="/api/sysRole/grantDataScope",s=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const o={method:"POST",...t,...a},i={},h={};i["Content-Type"]="application/json-patch+json";const l=new URLSearchParams(s.search);for(const n in h)l.set(n,h[n]);for(const n in a.params)l.set(n,a.params[n]);s.search=new URLSearchParams(l).toString();let p=t&&t.headers?t.headers:{};o.headers={...i,...p,...a.headers};const y=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:o}},apiSysRoleGrantMenuPost:async(e,a={})=>{const r="/api/sysRole/grantMenu",s=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const o={method:"POST",...t,...a},i={},h={};i["Content-Type"]="application/json-patch+json";const l=new URLSearchParams(s.search);for(const n in h)l.set(n,h[n]);for(const n in a.params)l.set(n,a.params[n]);s.search=new URLSearchParams(l).toString();let p=t&&t.headers?t.headers:{};o.headers={...i,...p,...a.headers};const y=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:o}},apiSysRoleListGet:async(e={})=>{const a="/api/sysRole/list",r=new URL(a,"https://example.com");let s;c&&(s=c.baseOptions);const t={method:"GET",...s,...e},o={},i={},h=new URLSearchParams(r.search);for(const p in i)h.set(p,i[p]);for(const p in e.params)h.set(p,e.params[p]);r.search=new URLSearchParams(h).toString();let l=s&&s.headers?s.headers:{};return t.headers={...o,...l,...e.headers},{url:r.pathname+r.search+r.hash,options:t}},apiSysRoleOwnMenuListGet:async(e,a,r={})=>{if(e==null)throw new d("id","Required parameter id was null or undefined when calling apiSysRoleOwnMenuListGet.");const s="/api/sysRole/ownMenuList",t=new URL(s,"https://example.com");let o;c&&(o=c.baseOptions);const i={method:"GET",...o,...r},h={},l={};a!==void 0&&(l.Status=a),e!==void 0&&(l.Id=e);const p=new URLSearchParams(t.search);for(const n in l)p.set(n,l[n]);for(const n in r.params)p.set(n,r.params[n]);t.search=new URLSearchParams(p).toString();let y=o&&o.headers?o.headers:{};return i.headers={...h,...y,...r.headers},{url:t.pathname+t.search+t.hash,options:i}},apiSysRoleOwnOrgListGet:async(e,a,r={})=>{if(e==null)throw new d("id","Required parameter id was null or undefined when calling apiSysRoleOwnOrgListGet.");const s="/api/sysRole/ownOrgList",t=new URL(s,"https://example.com");let o;c&&(o=c.baseOptions);const i={method:"GET",...o,...r},h={},l={};a!==void 0&&(l.Status=a),e!==void 0&&(l.Id=e);const p=new URLSearchParams(t.search);for(const n in l)p.set(n,l[n]);for(const n in r.params)p.set(n,r.params[n]);t.search=new URLSearchParams(p).toString();let y=o&&o.headers?o.headers:{};return i.headers={...h,...y,...r.headers},{url:t.pathname+t.search+t.hash,options:i}},apiSysRolePagePost:async(e,a={})=>{const r="/api/sysRole/page",s=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const o={method:"POST",...t,...a},i={},h={};i["Content-Type"]="application/json-patch+json";const l=new URLSearchParams(s.search);for(const n in h)l.set(n,h[n]);for(const n in a.params)l.set(n,a.params[n]);s.search=new URLSearchParams(l).toString();let p=t&&t.headers?t.headers:{};o.headers={...i,...p,...a.headers};const y=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:o}},apiSysRoleSetStatusPost:async(e,a={})=>{const r="/api/sysRole/setStatus",s=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const o={method:"POST",...t,...a},i={},h={};i["Content-Type"]="application/json-patch+json";const l=new URLSearchParams(s.search);for(const n in h)l.set(n,h[n]);for(const n in a.params)l.set(n,a.params[n]);s.search=new URLSearchParams(l).toString();let p=t&&t.headers?t.headers:{};o.headers={...i,...p,...a.headers};const y=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:o}},apiSysRoleUpdatePost:async(e,a={})=>{const r="/api/sysRole/update",s=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const o={method:"POST",...t,...a},i={},h={};i["Content-Type"]="application/json-patch+json";const l=new URLSearchParams(s.search);for(const n in h)l.set(n,h[n]);for(const n in a.params)l.set(n,a.params[n]);s.search=new URLSearchParams(l).toString();let p=t&&t.headers?t.headers:{};o.headers={...i,...p,...a.headers};const y=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:o}}}},m=function(c){return{async apiSysRoleAddPost(e,a){const r=await R(c).apiSysRoleAddPost(e,a);return(s=u,t=S)=>{const o={...r.options,url:t+r.url};return s.request(o)}},async apiSysRoleDeletePost(e,a){const r=await R(c).apiSysRoleDeletePost(e,a);return(s=u,t=S)=>{const o={...r.options,url:t+r.url};return s.request(o)}},async apiSysRoleGrantDataScopePost(e,a){const r=await R(c).apiSysRoleGrantDataScopePost(e,a);return(s=u,t=S)=>{const o={...r.options,url:t+r.url};return s.request(o)}},async apiSysRoleGrantMenuPost(e,a){const r=await R(c).apiSysRoleGrantMenuPost(e,a);return(s=u,t=S)=>{const o={...r.options,url:t+r.url};return s.request(o)}},async apiSysRoleListGet(e){const a=await R(c).apiSysRoleListGet(e);return(r=u,s=S)=>{const t={...a.options,url:s+a.url};return r.request(t)}},async apiSysRoleOwnMenuListGet(e,a,r){const s=await R(c).apiSysRoleOwnMenuListGet(e,a,r);return(t=u,o=S)=>{const i={...s.options,url:o+s.url};return t.request(i)}},async apiSysRoleOwnOrgListGet(e,a,r){const s=await R(c).apiSysRoleOwnOrgListGet(e,a,r);return(t=u,o=S)=>{const i={...s.options,url:o+s.url};return t.request(i)}},async apiSysRolePagePost(e,a){const r=await R(c).apiSysRolePagePost(e,a);return(s=u,t=S)=>{const o={...r.options,url:t+r.url};return s.request(o)}},async apiSysRoleSetStatusPost(e,a){const r=await R(c).apiSysRoleSetStatusPost(e,a);return(s=u,t=S)=>{const o={...r.options,url:t+r.url};return s.request(o)}},async apiSysRoleUpdatePost(e,a){const r=await R(c).apiSysRoleUpdatePost(e,a);return(s=u,t=S)=>{const o={...r.options,url:t+r.url};return s.request(o)}}}};class w extends P{async apiSysRoleAddPost(e,a){return m(this.configuration).apiSysRoleAddPost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysRoleDeletePost(e,a){return m(this.configuration).apiSysRoleDeletePost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysRoleGrantDataScopePost(e,a){return m(this.configuration).apiSysRoleGrantDataScopePost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysRoleGrantMenuPost(e,a){return m(this.configuration).apiSysRoleGrantMenuPost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysRoleListGet(e){return m(this.configuration).apiSysRoleListGet(e).then(a=>a(this.axios,this.basePath))}async apiSysRoleOwnMenuListGet(e,a,r){return m(this.configuration).apiSysRoleOwnMenuListGet(e,a,r).then(s=>s(this.axios,this.basePath))}async apiSysRoleOwnOrgListGet(e,a,r){return m(this.configuration).apiSysRoleOwnOrgListGet(e,a,r).then(s=>s(this.axios,this.basePath))}async apiSysRolePagePost(e,a){return m(this.configuration).apiSysRolePagePost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysRoleSetStatusPost(e,a){return m(this.configuration).apiSysRoleSetStatusPost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysRoleUpdatePost(e,a){return m(this.configuration).apiSysRoleUpdatePost(e,a).then(r=>r(this.axios,this.basePath))}}export{w as S};
