import{B as P,i as O,j as u,R as g}from"./index.b8a2e51c.js";const m=function(c){return{apiSysOrgAddPost:async(e,s={})=>{const n="/api/sysOrg/add",a=new URL(n,"https://example.com");let t;c&&(t=c.baseOptions);const r={method:"POST",...t,...s},i={},l={};i["Content-Type"]="application/json-patch+json";const p=new URLSearchParams(a.search);for(const o in l)p.set(o,l[o]);for(const o in s.params)p.set(o,s.params[o]);a.search=new URLSearchParams(p).toString();let h=t&&t.headers?t.headers:{};r.headers={...i,...h,...s.headers};const d=typeof e!="string"||r.headers["Content-Type"]==="application/json";return r.data=d?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:r}},apiSysOrgDeletePost:async(e,s={})=>{const n="/api/sysOrg/delete",a=new URL(n,"https://example.com");let t;c&&(t=c.baseOptions);const r={method:"POST",...t,...s},i={},l={};i["Content-Type"]="application/json-patch+json";const p=new URLSearchParams(a.search);for(const o in l)p.set(o,l[o]);for(const o in s.params)p.set(o,s.params[o]);a.search=new URLSearchParams(p).toString();let h=t&&t.headers?t.headers:{};r.headers={...i,...h,...s.headers};const d=typeof e!="string"||r.headers["Content-Type"]==="application/json";return r.data=d?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:r}},apiSysOrgListGet:async(e,s,n,a={})=>{if(e==null)throw new g("id","Required parameter id was null or undefined when calling apiSysOrgListGet.");const t="/api/sysOrg/list",r=new URL(t,"https://example.com");let i;c&&(i=c.baseOptions);const l={method:"GET",...i,...a},p={},h={};s!==void 0&&(h.Name=s),n!==void 0&&(h.Code=n),e!==void 0&&(h.Id=e);const d=new URLSearchParams(r.search);for(const y in h)d.set(y,h[y]);for(const y in a.params)d.set(y,a.params[y]);r.search=new URLSearchParams(d).toString();let o=i&&i.headers?i.headers:{};return l.headers={...p,...o,...a.headers},{url:r.pathname+r.search+r.hash,options:l}},apiSysOrgUpdatePost:async(e,s={})=>{const n="/api/sysOrg/update",a=new URL(n,"https://example.com");let t;c&&(t=c.baseOptions);const r={method:"POST",...t,...s},i={},l={};i["Content-Type"]="application/json-patch+json";const p=new URLSearchParams(a.search);for(const o in l)p.set(o,l[o]);for(const o in s.params)p.set(o,s.params[o]);a.search=new URLSearchParams(p).toString();let h=t&&t.headers?t.headers:{};r.headers={...i,...h,...s.headers};const d=typeof e!="string"||r.headers["Content-Type"]==="application/json";return r.data=d?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:r}}}},S=function(c){return{async apiSysOrgAddPost(e,s){const n=await m(c).apiSysOrgAddPost(e,s);return(a=O,t=u)=>{const r={...n.options,url:t+n.url};return a.request(r)}},async apiSysOrgDeletePost(e,s){const n=await m(c).apiSysOrgDeletePost(e,s);return(a=O,t=u)=>{const r={...n.options,url:t+n.url};return a.request(r)}},async apiSysOrgListGet(e,s,n,a){const t=await m(c).apiSysOrgListGet(e,s,n,a);return(r=O,i=u)=>{const l={...t.options,url:i+t.url};return r.request(l)}},async apiSysOrgUpdatePost(e,s){const n=await m(c).apiSysOrgUpdatePost(e,s);return(a=O,t=u)=>{const r={...n.options,url:t+n.url};return a.request(r)}}}};class V extends P{async apiSysOrgAddPost(e,s){return S(this.configuration).apiSysOrgAddPost(e,s).then(n=>n(this.axios,this.basePath))}async apiSysOrgDeletePost(e,s){return S(this.configuration).apiSysOrgDeletePost(e,s).then(n=>n(this.axios,this.basePath))}async apiSysOrgListGet(e,s,n,a){return S(this.configuration).apiSysOrgListGet(e,s,n,a).then(t=>t(this.axios,this.basePath))}async apiSysOrgUpdatePost(e,s){return S(this.configuration).apiSysOrgUpdatePost(e,s).then(n=>n(this.axios,this.basePath))}}export{V as S};
