import{B as S,h as y,i as d}from"./index.122dcd40.js";const m=function(c){return{apiSysPosAddPost:async(s,a={})=>{const r="/api/sysPos/add",t=new URL(r,"https://example.com");let e;c&&(e=c.baseOptions);const o={method:"POST",...e,...a},l={},p={};l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const n in p)i.set(n,p[n]);for(const n in a.params)i.set(n,a.params[n]);t.search=new URLSearchParams(i).toString();let h=e&&e.headers?e.headers:{};o.headers={...l,...h,...a.headers};const P=typeof s!="string"||o.headers["Content-Type"]==="application/json";return o.data=P?JSON.stringify(s!==void 0?s:{}):s||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysPosDeletePost:async(s,a={})=>{const r="/api/sysPos/delete",t=new URL(r,"https://example.com");let e;c&&(e=c.baseOptions);const o={method:"POST",...e,...a},l={},p={};l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const n in p)i.set(n,p[n]);for(const n in a.params)i.set(n,a.params[n]);t.search=new URLSearchParams(i).toString();let h=e&&e.headers?e.headers:{};o.headers={...l,...h,...a.headers};const P=typeof s!="string"||o.headers["Content-Type"]==="application/json";return o.data=P?JSON.stringify(s!==void 0?s:{}):s||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysPosListGet:async(s,a,r={})=>{const t="/api/sysPos/list",e=new URL(t,"https://example.com");let o;c&&(o=c.baseOptions);const l={method:"GET",...o,...r},p={},i={};s!==void 0&&(i.Name=s),a!==void 0&&(i.Code=a);const h=new URLSearchParams(e.search);for(const n in i)h.set(n,i[n]);for(const n in r.params)h.set(n,r.params[n]);e.search=new URLSearchParams(h).toString();let P=o&&o.headers?o.headers:{};return l.headers={...p,...P,...r.headers},{url:e.pathname+e.search+e.hash,options:l}},apiSysPosUpdatePost:async(s,a={})=>{const r="/api/sysPos/update",t=new URL(r,"https://example.com");let e;c&&(e=c.baseOptions);const o={method:"POST",...e,...a},l={},p={};l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(t.search);for(const n in p)i.set(n,p[n]);for(const n in a.params)i.set(n,a.params[n]);t.search=new URLSearchParams(i).toString();let h=e&&e.headers?e.headers:{};o.headers={...l,...h,...a.headers};const P=typeof s!="string"||o.headers["Content-Type"]==="application/json";return o.data=P?JSON.stringify(s!==void 0?s:{}):s||"",{url:t.pathname+t.search+t.hash,options:o}}}},u=function(c){return{async apiSysPosAddPost(s,a){const r=await m(c).apiSysPosAddPost(s,a);return(t=y,e=d)=>{const o={...r.options,url:e+r.url};return t.request(o)}},async apiSysPosDeletePost(s,a){const r=await m(c).apiSysPosDeletePost(s,a);return(t=y,e=d)=>{const o={...r.options,url:e+r.url};return t.request(o)}},async apiSysPosListGet(s,a,r){const t=await m(c).apiSysPosListGet(s,a,r);return(e=y,o=d)=>{const l={...t.options,url:o+t.url};return e.request(l)}},async apiSysPosUpdatePost(s,a){const r=await m(c).apiSysPosUpdatePost(s,a);return(t=y,e=d)=>{const o={...r.options,url:e+r.url};return t.request(o)}}}};class A extends S{async apiSysPosAddPost(s,a){return u(this.configuration).apiSysPosAddPost(s,a).then(r=>r(this.axios,this.basePath))}async apiSysPosDeletePost(s,a){return u(this.configuration).apiSysPosDeletePost(s,a).then(r=>r(this.axios,this.basePath))}async apiSysPosListGet(s,a,r){return u(this.configuration).apiSysPosListGet(s,a,r).then(t=>t(this.axios,this.basePath))}async apiSysPosUpdatePost(s,a){return u(this.configuration).apiSysPosUpdatePost(s,a).then(r=>r(this.axios,this.basePath))}}export{A as S};
