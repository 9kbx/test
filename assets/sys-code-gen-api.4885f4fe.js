import{B as P,i as y,j as m,R as C}from"./index.795da706.js";const u=function(l){return{apiSysCodeGenAddPost:async(e,a={})=>{const r="/api/sysCodeGen/add",s=new URL(r,"https://example.com");let t;l&&(t=l.baseOptions);const n={method:"POST",...t,...a},h={},c={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(s.search);for(const o in c)i.set(o,c[o]);for(const o in a.params)i.set(o,a.params[o]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};n.headers={...h,...p,...a.headers};const d=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=d?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:n}},apiSysCodeGenColumnListByTableNameTableNameConfigIdGet:async(e,a,r={})=>{if(e==null)throw new C("tableName","Required parameter tableName was null or undefined when calling apiSysCodeGenColumnListByTableNameTableNameConfigIdGet.");if(a==null)throw new C("configId","Required parameter configId was null or undefined when calling apiSysCodeGenColumnListByTableNameTableNameConfigIdGet.");const s="/api/sysCodeGen/columnListByTableName/{tableName}/{configId}".replace("{tableName}",encodeURIComponent(String(e))).replace("{configId}",encodeURIComponent(String(a))),t=new URL(s,"https://example.com");let n;l&&(n=l.baseOptions);const h={method:"GET",...n,...r},c={},i={},p=new URLSearchParams(t.search);for(const o in i)p.set(o,i[o]);for(const o in r.params)p.set(o,r.params[o]);t.search=new URLSearchParams(p).toString();let d=n&&n.headers?n.headers:{};return h.headers={...c,...d,...r.headers},{url:t.pathname+t.search+t.hash,options:h}},apiSysCodeGenDatabaseListGet:async(e={})=>{const a="/api/sysCodeGen/databaseList",r=new URL(a,"https://example.com");let s;l&&(s=l.baseOptions);const t={method:"GET",...s,...e},n={},h={},c=new URLSearchParams(r.search);for(const p in h)c.set(p,h[p]);for(const p in e.params)c.set(p,e.params[p]);r.search=new URLSearchParams(c).toString();let i=s&&s.headers?s.headers:{};return t.headers={...n,...i,...e.headers},{url:r.pathname+r.search+r.hash,options:t}},apiSysCodeGenDeletePost:async(e,a={})=>{const r="/api/sysCodeGen/delete",s=new URL(r,"https://example.com");let t;l&&(t=l.baseOptions);const n={method:"POST",...t,...a},h={},c={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(s.search);for(const o in c)i.set(o,c[o]);for(const o in a.params)i.set(o,a.params[o]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};n.headers={...h,...p,...a.headers};const d=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=d?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:n}},apiSysCodeGenDetailGet:async(e,a={})=>{if(e==null)throw new C("id","Required parameter id was null or undefined when calling apiSysCodeGenDetailGet.");const r="/api/sysCodeGen/detail",s=new URL(r,"https://example.com");let t;l&&(t=l.baseOptions);const n={method:"GET",...t,...a},h={},c={};e!==void 0&&(c.Id=e);const i=new URLSearchParams(s.search);for(const d in c)i.set(d,c[d]);for(const d in a.params)i.set(d,a.params[d]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};return n.headers={...h,...p,...a.headers},{url:s.pathname+s.search+s.hash,options:n}},apiSysCodeGenPagePost:async(e,a={})=>{const r="/api/sysCodeGen/page",s=new URL(r,"https://example.com");let t;l&&(t=l.baseOptions);const n={method:"POST",...t,...a},h={},c={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(s.search);for(const o in c)i.set(o,c[o]);for(const o in a.params)i.set(o,a.params[o]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};n.headers={...h,...p,...a.headers};const d=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=d?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:n}},apiSysCodeGenRunLocalPost:async(e,a={})=>{const r="/api/sysCodeGen/runLocal",s=new URL(r,"https://example.com");let t;l&&(t=l.baseOptions);const n={method:"POST",...t,...a},h={},c={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(s.search);for(const o in c)i.set(o,c[o]);for(const o in a.params)i.set(o,a.params[o]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};n.headers={...h,...p,...a.headers};const d=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=d?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:n}},apiSysCodeGenTableListConfigIdGet:async(e,a={})=>{if(e==null)throw new C("configId","Required parameter configId was null or undefined when calling apiSysCodeGenTableListConfigIdGet.");const r="/api/sysCodeGen/tableList/{configId}".replace("{configId}",encodeURIComponent(String(e))),s=new URL(r,"https://example.com");let t;l&&(t=l.baseOptions);const n={method:"GET",...t,...a},h={},c={},i=new URLSearchParams(s.search);for(const d in c)i.set(d,c[d]);for(const d in a.params)i.set(d,a.params[d]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};return n.headers={...h,...p,...a.headers},{url:s.pathname+s.search+s.hash,options:n}},apiSysCodeGenUpdatePost:async(e,a={})=>{const r="/api/sysCodeGen/update",s=new URL(r,"https://example.com");let t;l&&(t=l.baseOptions);const n={method:"POST",...t,...a},h={},c={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(s.search);for(const o in c)i.set(o,c[o]);for(const o in a.params)i.set(o,a.params[o]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};n.headers={...h,...p,...a.headers};const d=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=d?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:n}}}},S=function(l){return{async apiSysCodeGenAddPost(e,a){const r=await u(l).apiSysCodeGenAddPost(e,a);return(s=y,t=m)=>{const n={...r.options,url:t+r.url};return s.request(n)}},async apiSysCodeGenColumnListByTableNameTableNameConfigIdGet(e,a,r){const s=await u(l).apiSysCodeGenColumnListByTableNameTableNameConfigIdGet(e,a,r);return(t=y,n=m)=>{const h={...s.options,url:n+s.url};return t.request(h)}},async apiSysCodeGenDatabaseListGet(e){const a=await u(l).apiSysCodeGenDatabaseListGet(e);return(r=y,s=m)=>{const t={...a.options,url:s+a.url};return r.request(t)}},async apiSysCodeGenDeletePost(e,a){const r=await u(l).apiSysCodeGenDeletePost(e,a);return(s=y,t=m)=>{const n={...r.options,url:t+r.url};return s.request(n)}},async apiSysCodeGenDetailGet(e,a){const r=await u(l).apiSysCodeGenDetailGet(e,a);return(s=y,t=m)=>{const n={...r.options,url:t+r.url};return s.request(n)}},async apiSysCodeGenPagePost(e,a){const r=await u(l).apiSysCodeGenPagePost(e,a);return(s=y,t=m)=>{const n={...r.options,url:t+r.url};return s.request(n)}},async apiSysCodeGenRunLocalPost(e,a){const r=await u(l).apiSysCodeGenRunLocalPost(e,a);return(s=y,t=m)=>{const n={...r.options,url:t+r.url};return s.request(n)}},async apiSysCodeGenTableListConfigIdGet(e,a){const r=await u(l).apiSysCodeGenTableListConfigIdGet(e,a);return(s=y,t=m)=>{const n={...r.options,url:t+r.url};return s.request(n)}},async apiSysCodeGenUpdatePost(e,a){const r=await u(l).apiSysCodeGenUpdatePost(e,a);return(s=y,t=m)=>{const n={...r.options,url:t+r.url};return s.request(n)}}}};class R extends P{async apiSysCodeGenAddPost(e,a){return S(this.configuration).apiSysCodeGenAddPost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysCodeGenColumnListByTableNameTableNameConfigIdGet(e,a,r){return S(this.configuration).apiSysCodeGenColumnListByTableNameTableNameConfigIdGet(e,a,r).then(s=>s(this.axios,this.basePath))}async apiSysCodeGenDatabaseListGet(e){return S(this.configuration).apiSysCodeGenDatabaseListGet(e).then(a=>a(this.axios,this.basePath))}async apiSysCodeGenDeletePost(e,a){return S(this.configuration).apiSysCodeGenDeletePost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysCodeGenDetailGet(e,a){return S(this.configuration).apiSysCodeGenDetailGet(e,a).then(r=>r(this.axios,this.basePath))}async apiSysCodeGenPagePost(e,a){return S(this.configuration).apiSysCodeGenPagePost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysCodeGenRunLocalPost(e,a){return S(this.configuration).apiSysCodeGenRunLocalPost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysCodeGenTableListConfigIdGet(e,a){return S(this.configuration).apiSysCodeGenTableListConfigIdGet(e,a).then(r=>r(this.axios,this.basePath))}async apiSysCodeGenUpdatePost(e,a){return S(this.configuration).apiSysCodeGenUpdatePost(e,a).then(r=>r(this.axios,this.basePath))}}export{R as S};
