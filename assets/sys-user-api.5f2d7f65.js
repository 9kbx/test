import{B as m,i as d,j as u,R as S}from"./index.09fc6580.js";const P=function(c){return{apiSysUserAddPost:async(e,s={})=>{const r="/api/sysUser/add",a=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const n={method:"POST",...t,...s},h={},l={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(a.search);for(const o in l)i.set(o,l[o]);for(const o in s.params)i.set(o,s.params[o]);a.search=new URLSearchParams(i).toString();let y=t&&t.headers?t.headers:{};n.headers={...h,...y,...s.headers};const p=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=p?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysUserBaseInfoGet:async(e={})=>{const s="/api/sysUser/baseInfo",r=new URL(s,"https://example.com");let a;c&&(a=c.baseOptions);const t={method:"GET",...a,...e},n={},h={},l=new URLSearchParams(r.search);for(const y in h)l.set(y,h[y]);for(const y in e.params)l.set(y,e.params[y]);r.search=new URLSearchParams(l).toString();let i=a&&a.headers?a.headers:{};return t.headers={...n,...i,...e.headers},{url:r.pathname+r.search+r.hash,options:t}},apiSysUserBaseInfoPost:async(e,s={})=>{const r="/api/sysUser/baseInfo",a=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const n={method:"POST",...t,...s},h={},l={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(a.search);for(const o in l)i.set(o,l[o]);for(const o in s.params)i.set(o,s.params[o]);a.search=new URLSearchParams(i).toString();let y=t&&t.headers?t.headers:{};n.headers={...h,...y,...s.headers};const p=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=p?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysUserChangePwdPost:async(e,s={})=>{const r="/api/sysUser/changePwd",a=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const n={method:"POST",...t,...s},h={},l={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(a.search);for(const o in l)i.set(o,l[o]);for(const o in s.params)i.set(o,s.params[o]);a.search=new URLSearchParams(i).toString();let y=t&&t.headers?t.headers:{};n.headers={...h,...y,...s.headers};const p=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=p?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysUserDeletePost:async(e,s={})=>{const r="/api/sysUser/delete",a=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const n={method:"POST",...t,...s},h={},l={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(a.search);for(const o in l)i.set(o,l[o]);for(const o in s.params)i.set(o,s.params[o]);a.search=new URLSearchParams(i).toString();let y=t&&t.headers?t.headers:{};n.headers={...h,...y,...s.headers};const p=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=p?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysUserGrantRolePost:async(e,s={})=>{const r="/api/sysUser/grantRole",a=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const n={method:"POST",...t,...s},h={},l={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(a.search);for(const o in l)i.set(o,l[o]);for(const o in s.params)i.set(o,s.params[o]);a.search=new URLSearchParams(i).toString();let y=t&&t.headers?t.headers:{};n.headers={...h,...y,...s.headers};const p=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=p?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysUserOwnExtOrgListUserIdGet:async(e,s={})=>{if(e==null)throw new S("userId","Required parameter userId was null or undefined when calling apiSysUserOwnExtOrgListUserIdGet.");const r="/api/sysUser/ownExtOrgList/{userId}".replace("{userId}",encodeURIComponent(String(e))),a=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const n={method:"GET",...t,...s},h={},l={},i=new URLSearchParams(a.search);for(const p in l)i.set(p,l[p]);for(const p in s.params)i.set(p,s.params[p]);a.search=new URLSearchParams(i).toString();let y=t&&t.headers?t.headers:{};return n.headers={...h,...y,...s.headers},{url:a.pathname+a.search+a.hash,options:n}},apiSysUserOwnRoleListUserIdGet:async(e,s={})=>{if(e==null)throw new S("userId","Required parameter userId was null or undefined when calling apiSysUserOwnRoleListUserIdGet.");const r="/api/sysUser/ownRoleList/{userId}".replace("{userId}",encodeURIComponent(String(e))),a=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const n={method:"GET",...t,...s},h={},l={},i=new URLSearchParams(a.search);for(const p in l)i.set(p,l[p]);for(const p in s.params)i.set(p,s.params[p]);a.search=new URLSearchParams(i).toString();let y=t&&t.headers?t.headers:{};return n.headers={...h,...y,...s.headers},{url:a.pathname+a.search+a.hash,options:n}},apiSysUserPagePost:async(e,s={})=>{const r="/api/sysUser/page",a=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const n={method:"POST",...t,...s},h={},l={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(a.search);for(const o in l)i.set(o,l[o]);for(const o in s.params)i.set(o,s.params[o]);a.search=new URLSearchParams(i).toString();let y=t&&t.headers?t.headers:{};n.headers={...h,...y,...s.headers};const p=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=p?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysUserResetPwdPost:async(e,s={})=>{const r="/api/sysUser/resetPwd",a=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const n={method:"POST",...t,...s},h={},l={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(a.search);for(const o in l)i.set(o,l[o]);for(const o in s.params)i.set(o,s.params[o]);a.search=new URLSearchParams(i).toString();let y=t&&t.headers?t.headers:{};n.headers={...h,...y,...s.headers};const p=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=p?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysUserSetStatusPost:async(e,s={})=>{const r="/api/sysUser/setStatus",a=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const n={method:"POST",...t,...s},h={},l={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(a.search);for(const o in l)i.set(o,l[o]);for(const o in s.params)i.set(o,s.params[o]);a.search=new URLSearchParams(i).toString();let y=t&&t.headers?t.headers:{};n.headers={...h,...y,...s.headers};const p=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=p?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}},apiSysUserUpdatePost:async(e,s={})=>{const r="/api/sysUser/update",a=new URL(r,"https://example.com");let t;c&&(t=c.baseOptions);const n={method:"POST",...t,...s},h={},l={};h["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(a.search);for(const o in l)i.set(o,l[o]);for(const o in s.params)i.set(o,s.params[o]);a.search=new URLSearchParams(i).toString();let y=t&&t.headers?t.headers:{};n.headers={...h,...y,...s.headers};const p=typeof e!="string"||n.headers["Content-Type"]==="application/json";return n.data=p?JSON.stringify(e!==void 0?e:{}):e||"",{url:a.pathname+a.search+a.hash,options:n}}}},U=function(c){return{async apiSysUserAddPost(e,s){const r=await P(c).apiSysUserAddPost(e,s);return(a=d,t=u)=>{const n={...r.options,url:t+r.url};return a.request(n)}},async apiSysUserBaseInfoGet(e){const s=await P(c).apiSysUserBaseInfoGet(e);return(r=d,a=u)=>{const t={...s.options,url:a+s.url};return r.request(t)}},async apiSysUserBaseInfoPost(e,s){const r=await P(c).apiSysUserBaseInfoPost(e,s);return(a=d,t=u)=>{const n={...r.options,url:t+r.url};return a.request(n)}},async apiSysUserChangePwdPost(e,s){const r=await P(c).apiSysUserChangePwdPost(e,s);return(a=d,t=u)=>{const n={...r.options,url:t+r.url};return a.request(n)}},async apiSysUserDeletePost(e,s){const r=await P(c).apiSysUserDeletePost(e,s);return(a=d,t=u)=>{const n={...r.options,url:t+r.url};return a.request(n)}},async apiSysUserGrantRolePost(e,s){const r=await P(c).apiSysUserGrantRolePost(e,s);return(a=d,t=u)=>{const n={...r.options,url:t+r.url};return a.request(n)}},async apiSysUserOwnExtOrgListUserIdGet(e,s){const r=await P(c).apiSysUserOwnExtOrgListUserIdGet(e,s);return(a=d,t=u)=>{const n={...r.options,url:t+r.url};return a.request(n)}},async apiSysUserOwnRoleListUserIdGet(e,s){const r=await P(c).apiSysUserOwnRoleListUserIdGet(e,s);return(a=d,t=u)=>{const n={...r.options,url:t+r.url};return a.request(n)}},async apiSysUserPagePost(e,s){const r=await P(c).apiSysUserPagePost(e,s);return(a=d,t=u)=>{const n={...r.options,url:t+r.url};return a.request(n)}},async apiSysUserResetPwdPost(e,s){const r=await P(c).apiSysUserResetPwdPost(e,s);return(a=d,t=u)=>{const n={...r.options,url:t+r.url};return a.request(n)}},async apiSysUserSetStatusPost(e,s){const r=await P(c).apiSysUserSetStatusPost(e,s);return(a=d,t=u)=>{const n={...r.options,url:t+r.url};return a.request(n)}},async apiSysUserUpdatePost(e,s){const r=await P(c).apiSysUserUpdatePost(e,s);return(a=d,t=u)=>{const n={...r.options,url:t+r.url};return a.request(n)}}}};class R extends m{async apiSysUserAddPost(e,s){return U(this.configuration).apiSysUserAddPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysUserBaseInfoGet(e){return U(this.configuration).apiSysUserBaseInfoGet(e).then(s=>s(this.axios,this.basePath))}async apiSysUserBaseInfoPost(e,s){return U(this.configuration).apiSysUserBaseInfoPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysUserChangePwdPost(e,s){return U(this.configuration).apiSysUserChangePwdPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysUserDeletePost(e,s){return U(this.configuration).apiSysUserDeletePost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysUserGrantRolePost(e,s){return U(this.configuration).apiSysUserGrantRolePost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysUserOwnExtOrgListUserIdGet(e,s){return U(this.configuration).apiSysUserOwnExtOrgListUserIdGet(e,s).then(r=>r(this.axios,this.basePath))}async apiSysUserOwnRoleListUserIdGet(e,s){return U(this.configuration).apiSysUserOwnRoleListUserIdGet(e,s).then(r=>r(this.axios,this.basePath))}async apiSysUserPagePost(e,s){return U(this.configuration).apiSysUserPagePost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysUserResetPwdPost(e,s){return U(this.configuration).apiSysUserResetPwdPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysUserSetStatusPost(e,s){return U(this.configuration).apiSysUserSetStatusPost(e,s).then(r=>r(this.axios,this.basePath))}async apiSysUserUpdatePost(e,s){return U(this.configuration).apiSysUserUpdatePost(e,s).then(r=>r(this.axios,this.basePath))}}export{R as S};
