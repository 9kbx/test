import{B as S,i as d,j as y}from"./index.09fc6580.js";const F=function(i){return{apiSysFileDeletePost:async(s,a={})=>{const r="/api/sysFile/delete",t=new URL(r,"https://example.com");let e;i&&(e=i.baseOptions);const o={method:"POST",...e,...a},c={},p={};c["Content-Type"]="application/json-patch+json";const n=new URLSearchParams(t.search);for(const l in p)n.set(l,p[l]);for(const l in a.params)n.set(l,a.params[l]);t.search=new URLSearchParams(n).toString();let h=e&&e.headers?e.headers:{};o.headers={...c,...h,...a.headers};const m=typeof s!="string"||o.headers["Content-Type"]==="application/json";return o.data=m?JSON.stringify(s!==void 0?s:{}):s||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysFileDownloadFilePost:async(s,a={})=>{const r="/api/sysFile/downloadFile",t=new URL(r,"https://example.com");let e;i&&(e=i.baseOptions);const o={method:"POST",...e,...a},c={},p={};c["Content-Type"]="application/json-patch+json";const n=new URLSearchParams(t.search);for(const l in p)n.set(l,p[l]);for(const l in a.params)n.set(l,a.params[l]);t.search=new URLSearchParams(n).toString();let h=e&&e.headers?e.headers:{};o.headers={...c,...h,...a.headers};const m=typeof s!="string"||o.headers["Content-Type"]==="application/json";return o.data=m?JSON.stringify(s!==void 0?s:{}):s||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysFilePagePost:async(s,a={})=>{const r="/api/sysFile/page",t=new URL(r,"https://example.com");let e;i&&(e=i.baseOptions);const o={method:"POST",...e,...a},c={},p={};c["Content-Type"]="application/json-patch+json";const n=new URLSearchParams(t.search);for(const l in p)n.set(l,p[l]);for(const l in a.params)n.set(l,a.params[l]);t.search=new URLSearchParams(n).toString();let h=e&&e.headers?e.headers:{};o.headers={...c,...h,...a.headers};const m=typeof s!="string"||o.headers["Content-Type"]==="application/json";return o.data=m?JSON.stringify(s!==void 0?s:{}):s||"",{url:t.pathname+t.search+t.hash,options:o}},apiSysFileUploadAvatarPostForm:async(s,a={})=>{const r="/api/sysFile/uploadAvatar",t=new URL(r,"https://example.com");let e;i&&(e=i.baseOptions);const o={method:"POST",...e,...a},c={},p={},n=new FormData;s!==void 0&&n.append("file",s),c["Content-Type"]="multipart/form-data";const h=new URLSearchParams(t.search);for(const l in p)h.set(l,p[l]);for(const l in a.params)h.set(l,a.params[l]);t.search=new URLSearchParams(h).toString();let m=e&&e.headers?e.headers:{};return o.headers={...c,...m,...a.headers},o.data=n,{url:t.pathname+t.search+t.hash,options:o}},apiSysFileUploadFilePostForm:async(s,a,r={})=>{const t="/api/sysFile/uploadFile",e=new URL(t,"https://example.com");let o;i&&(o=i.baseOptions);const c={method:"POST",...o,...r},p={},n={},h=new FormData;a!==void 0&&(n.path=a),s!==void 0&&h.append("file",s),p["Content-Type"]="multipart/form-data";const m=new URLSearchParams(e.search);for(const u in n)m.set(u,n[u]);for(const u in r.params)m.set(u,r.params[u]);e.search=new URLSearchParams(m).toString();let l=o&&o.headers?o.headers:{};return c.headers={...p,...l,...r.headers},c.data=h,{url:e.pathname+e.search+e.hash,options:c}},apiSysFileUploadFilesPostForm:async(s,a={})=>{const r="/api/sysFile/uploadFiles",t=new URL(r,"https://example.com");let e;i&&(e=i.baseOptions);const o={method:"POST",...e,...a},c={},p={},n=new FormData;s&&s.forEach(l=>{n.append("files",l)}),c["Content-Type"]="multipart/form-data";const h=new URLSearchParams(t.search);for(const l in p)h.set(l,p[l]);for(const l in a.params)h.set(l,a.params[l]);t.search=new URLSearchParams(h).toString();let m=e&&e.headers?e.headers:{};return o.headers={...c,...m,...a.headers},o.data=n,{url:t.pathname+t.search+t.hash,options:o}},apiSysFileUploadSignaturePostForm:async(s,a={})=>{const r="/api/sysFile/uploadSignature",t=new URL(r,"https://example.com");let e;i&&(e=i.baseOptions);const o={method:"POST",...e,...a},c={},p={},n=new FormData;s!==void 0&&n.append("file",s),c["Content-Type"]="multipart/form-data";const h=new URLSearchParams(t.search);for(const l in p)h.set(l,p[l]);for(const l in a.params)h.set(l,a.params[l]);t.search=new URLSearchParams(h).toString();let m=e&&e.headers?e.headers:{};return o.headers={...c,...m,...a.headers},o.data=n,{url:t.pathname+t.search+t.hash,options:o}}}},P=function(i){return{async apiSysFileDeletePost(s,a){const r=await F(i).apiSysFileDeletePost(s,a);return(t=d,e=y)=>{const o={...r.options,url:e+r.url};return t.request(o)}},async apiSysFileDownloadFilePost(s,a){const r=await F(i).apiSysFileDownloadFilePost(s,a);return(t=d,e=y)=>{const o={...r.options,url:e+r.url};return t.request(o)}},async apiSysFilePagePost(s,a){const r=await F(i).apiSysFilePagePost(s,a);return(t=d,e=y)=>{const o={...r.options,url:e+r.url};return t.request(o)}},async apiSysFileUploadAvatarPostForm(s,a){const r=await F(i).apiSysFileUploadAvatarPostForm(s,a);return(t=d,e=y)=>{const o={...r.options,url:e+r.url};return t.request(o)}},async apiSysFileUploadFilePostForm(s,a,r){const t=await F(i).apiSysFileUploadFilePostForm(s,a,r);return(e=d,o=y)=>{const c={...t.options,url:o+t.url};return e.request(c)}},async apiSysFileUploadFilesPostForm(s,a){const r=await F(i).apiSysFileUploadFilesPostForm(s,a);return(t=d,e=y)=>{const o={...r.options,url:e+r.url};return t.request(o)}},async apiSysFileUploadSignaturePostForm(s,a){const r=await F(i).apiSysFileUploadSignaturePostForm(s,a);return(t=d,e=y)=>{const o={...r.options,url:e+r.url};return t.request(o)}}}};class V extends S{async apiSysFileDeletePost(s,a){return P(this.configuration).apiSysFileDeletePost(s,a).then(r=>r(this.axios,this.basePath))}async apiSysFileDownloadFilePost(s,a){return P(this.configuration).apiSysFileDownloadFilePost(s,a).then(r=>r(this.axios,this.basePath))}async apiSysFilePagePost(s,a){return P(this.configuration).apiSysFilePagePost(s,a).then(r=>r(this.axios,this.basePath))}async apiSysFileUploadAvatarPostForm(s,a){return P(this.configuration).apiSysFileUploadAvatarPostForm(s,a).then(r=>r(this.axios,this.basePath))}async apiSysFileUploadFilePostForm(s,a,r){return P(this.configuration).apiSysFileUploadFilePostForm(s,a,r).then(t=>t(this.axios,this.basePath))}async apiSysFileUploadFilesPostForm(s,a){return P(this.configuration).apiSysFileUploadFilesPostForm(s,a).then(r=>r(this.axios,this.basePath))}async apiSysFileUploadSignaturePostForm(s,a){return P(this.configuration).apiSysFileUploadSignaturePostForm(s,a).then(r=>r(this.axios,this.basePath))}}export{V as S};
