import{B as U,i as P,j as u}from"./index.09fc6580.js";const S=function(h){return{apiSysNoticeAddPost:async(e,a={})=>{const r="/api/sysNotice/add",s=new URL(r,"https://example.com");let t;h&&(t=h.baseOptions);const o={method:"POST",...t,...a},l={},c={};l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(s.search);for(const n in c)i.set(n,c[n]);for(const n in a.params)i.set(n,a.params[n]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};o.headers={...l,...p,...a.headers};const y=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:o}},apiSysNoticeDeletePost:async(e,a={})=>{const r="/api/sysNotice/delete",s=new URL(r,"https://example.com");let t;h&&(t=h.baseOptions);const o={method:"POST",...t,...a},l={},c={};l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(s.search);for(const n in c)i.set(n,c[n]);for(const n in a.params)i.set(n,a.params[n]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};o.headers={...l,...p,...a.headers};const y=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:o}},apiSysNoticePagePost:async(e,a={})=>{const r="/api/sysNotice/page",s=new URL(r,"https://example.com");let t;h&&(t=h.baseOptions);const o={method:"POST",...t,...a},l={},c={};l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(s.search);for(const n in c)i.set(n,c[n]);for(const n in a.params)i.set(n,a.params[n]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};o.headers={...l,...p,...a.headers};const y=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:o}},apiSysNoticePageReceivedGet:async(e,a,r,s,t,o,l,c={})=>{const i="/api/sysNotice/pageReceived",p=new URL(i,"https://example.com");let y;h&&(y=h.baseOptions);const n={method:"GET",...y,...c},O={},d={};e!==void 0&&(d.Title=e),a!==void 0&&(d.Type=a),r!==void 0&&(d.Page=r),s!==void 0&&(d.PageSize=s),t!==void 0&&(d.Field=t),o!==void 0&&(d.Order=o),l!==void 0&&(d.DescStr=l);const N=new URLSearchParams(p.search);for(const R in d)N.set(R,d[R]);for(const R in c.params)N.set(R,c.params[R]);p.search=new URLSearchParams(N).toString();let V=y&&y.headers?y.headers:{};return n.headers={...O,...V,...c.headers},{url:p.pathname+p.search+p.hash,options:n}},apiSysNoticePublicPost:async(e,a={})=>{const r="/api/sysNotice/public",s=new URL(r,"https://example.com");let t;h&&(t=h.baseOptions);const o={method:"POST",...t,...a},l={},c={};l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(s.search);for(const n in c)i.set(n,c[n]);for(const n in a.params)i.set(n,a.params[n]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};o.headers={...l,...p,...a.headers};const y=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:o}},apiSysNoticeSetReadPost:async(e,a={})=>{const r="/api/sysNotice/setRead",s=new URL(r,"https://example.com");let t;h&&(t=h.baseOptions);const o={method:"POST",...t,...a},l={},c={};l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(s.search);for(const n in c)i.set(n,c[n]);for(const n in a.params)i.set(n,a.params[n]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};o.headers={...l,...p,...a.headers};const y=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:o}},apiSysNoticeUnReadListGet:async(e={})=>{const a="/api/sysNotice/unReadList",r=new URL(a,"https://example.com");let s;h&&(s=h.baseOptions);const t={method:"GET",...s,...e},o={},l={},c=new URLSearchParams(r.search);for(const p in l)c.set(p,l[p]);for(const p in e.params)c.set(p,e.params[p]);r.search=new URLSearchParams(c).toString();let i=s&&s.headers?s.headers:{};return t.headers={...o,...i,...e.headers},{url:r.pathname+r.search+r.hash,options:t}},apiSysNoticeUpdatePost:async(e,a={})=>{const r="/api/sysNotice/update",s=new URL(r,"https://example.com");let t;h&&(t=h.baseOptions);const o={method:"POST",...t,...a},l={},c={};l["Content-Type"]="application/json-patch+json";const i=new URLSearchParams(s.search);for(const n in c)i.set(n,c[n]);for(const n in a.params)i.set(n,a.params[n]);s.search=new URLSearchParams(i).toString();let p=t&&t.headers?t.headers:{};o.headers={...l,...p,...a.headers};const y=typeof e!="string"||o.headers["Content-Type"]==="application/json";return o.data=y?JSON.stringify(e!==void 0?e:{}):e||"",{url:s.pathname+s.search+s.hash,options:o}}}},m=function(h){return{async apiSysNoticeAddPost(e,a){const r=await S(h).apiSysNoticeAddPost(e,a);return(s=P,t=u)=>{const o={...r.options,url:t+r.url};return s.request(o)}},async apiSysNoticeDeletePost(e,a){const r=await S(h).apiSysNoticeDeletePost(e,a);return(s=P,t=u)=>{const o={...r.options,url:t+r.url};return s.request(o)}},async apiSysNoticePagePost(e,a){const r=await S(h).apiSysNoticePagePost(e,a);return(s=P,t=u)=>{const o={...r.options,url:t+r.url};return s.request(o)}},async apiSysNoticePageReceivedGet(e,a,r,s,t,o,l,c){const i=await S(h).apiSysNoticePageReceivedGet(e,a,r,s,t,o,l,c);return(p=P,y=u)=>{const n={...i.options,url:y+i.url};return p.request(n)}},async apiSysNoticePublicPost(e,a){const r=await S(h).apiSysNoticePublicPost(e,a);return(s=P,t=u)=>{const o={...r.options,url:t+r.url};return s.request(o)}},async apiSysNoticeSetReadPost(e,a){const r=await S(h).apiSysNoticeSetReadPost(e,a);return(s=P,t=u)=>{const o={...r.options,url:t+r.url};return s.request(o)}},async apiSysNoticeUnReadListGet(e){const a=await S(h).apiSysNoticeUnReadListGet(e);return(r=P,s=u)=>{const t={...a.options,url:s+a.url};return r.request(t)}},async apiSysNoticeUpdatePost(e,a){const r=await S(h).apiSysNoticeUpdatePost(e,a);return(s=P,t=u)=>{const o={...r.options,url:t+r.url};return s.request(o)}}}};class x extends U{async apiSysNoticeAddPost(e,a){return m(this.configuration).apiSysNoticeAddPost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysNoticeDeletePost(e,a){return m(this.configuration).apiSysNoticeDeletePost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysNoticePagePost(e,a){return m(this.configuration).apiSysNoticePagePost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysNoticePageReceivedGet(e,a,r,s,t,o,l,c){return m(this.configuration).apiSysNoticePageReceivedGet(e,a,r,s,t,o,l,c).then(i=>i(this.axios,this.basePath))}async apiSysNoticePublicPost(e,a){return m(this.configuration).apiSysNoticePublicPost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysNoticeSetReadPost(e,a){return m(this.configuration).apiSysNoticeSetReadPost(e,a).then(r=>r(this.axios,this.basePath))}async apiSysNoticeUnReadListGet(e){return m(this.configuration).apiSysNoticeUnReadListGet(e).then(a=>a(this.axios,this.basePath))}async apiSysNoticeUpdatePost(e,a){return m(this.configuration).apiSysNoticeUpdatePost(e,a).then(r=>r(this.axios,this.basePath))}}export{x as S};
